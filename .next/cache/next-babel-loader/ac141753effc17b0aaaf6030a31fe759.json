{"ast":null,"code":"var _jsxFileName = \"/Users/gux/Documents/Software/Development/Projects/ZeroToMastery/JuniorToSenior/next-server-sider-rendering/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Robot\"), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"About\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: `robot/${robot.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, robot.name))))));\n};\n\nRobots.getInitialProps = async function () {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/gux/Documents/Software/Development/Projects/ZeroToMastery/JuniorToSenior/next-server-sider-rendering/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADN,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IACrB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,SAAQD,KAAK,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACE,IAAV,CADF,CADF,CADD,CADH,CALF,CADF;AAiBD,CAlBD;;AAoBAN,MAAM,CAACO,eAAP,GAAyB,kBAAiB;AACxC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AACLR,IAAAA,MAAM,EAAEO;AADH,GAAP;AAGD,CAND;;AAQA,eAAeT,MAAf","sourcesContent":["import Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Robots = (props) => {\n  return (\n    <div>\n      <h1>Robot</h1>\n      <Link href='/about'>\n            <button>About</button>\n        </Link>\n      <div>\n        {props.robots.map(robot => (\n          <li key={robot.id}>\n            <Link href={`robot/${robot.id}`}>\n              <a>{robot.name}</a>\n            </Link>\n          </li>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nRobots.getInitialProps = async function() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/users')\n  const data = await res.json()\n  return {\n    robots: data\n  }\n}\n\nexport default Robots"]},"metadata":{},"sourceType":"module"}